import nextflow.util.SysHelper

manifest {
    mainScript = 'call-sSNV.nf'
    nextflowVersion = '>=20.07.1'
    author = 'Yuan Zhe (Caden) Bugh, Mao Tian'
    homePage = 'https://github.com/uclahs-cds/pipeline-call-sSNV'
    version = '2.1.1'
    name = 'call-sSNV'
}

params {
    sample_name = ''
    algorithm = [] // 'somaticsniper', 'strelka2', 'mutect2'
    tumor = ''
    normal = ''
    reference = ''
    output_dir = ''
    output_log_dir = ${params.output_dir}/${workflow.manifest.name}-${workflow.manifest.version}/${sample}/log-${workflow.manifest.name}-${workflow.manifest.version}-${date}

    save_intermediate_files = true

    // strelka2 options
    exome = false // adds the '--exome' option when running manta and strelka2

    // mutect2 options
    split_intervals_extra_args = ''
    mutect2_extra_args = ''
    filter_mutect_calls_extra_args = ''
    gatk_command_mem_diff = 500.MB
    scatter_count = 50
    intervals = ''
}

process {
    executor = 'local'
}

def node_cpus = SysHelper.getAvailCpus()
def node_mem  = SysHelper.getAvailMemory().toString()

if (node_cpus == 2 && (node_mem == '3 GB' || node_mem == '3.7 GB')) {
    includeConfig "${projectDir}/config/F2.config"
} else if (node_cpus == 32 && node_mem == '62.8 GB' ) {
    includeConfig "${projectDir}/config/F32.config"
} else if (node_cpus == 72 && (node_mem == '141.5 GB' || node_mem == '136.8 GB')) {
    includeConfig "${projectDir}/config/F72.config"
} else if (node_cpus == 64 && node_mem == '950 GB') {
    includeConfig "${projectDir}/config/M64.config"
} else {
    throw new Exception("ERROR: System resources not as expected, unable to assign resources. Detected cpus: ${node_cpus} and memory: ${node_mem}")
}

docker {
    enabled = true
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"
    runOptions = "${uid_and_gid} ${all_group_ids}"
}

trace {
    enabled = true
    file = "${params.output_log_dir}/nextflow-log/trace.txt"
}

timeline {
    enabled = true
    file = "${params.output_log_dir}/nextflow-log/timeline.html"
}

report {
    enabled = true
    file = "${params.output_log_dir}/nextflow-log/report.html"
}
