import nextflow.util.SysHelper

params {
    //algorithm running environment
    ucla_cds = true

    cache_intermediate_pipeline_steps = false

    //max_number_of_parallel_jobs = 1
    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    min_cpus = 1
    min_memory = 1.MB

    // default docker container registry
    docker_container_registry = "ghcr.io/uclahs-cds"

    //algorithm version
    pipeval_version = "4.0.0-rc.2"
    GATK_version = "4.4.0.0"
    somaticsniper_version = "1.0.5.0"
    bam_readcount_version = "0.8.0"
    ubuntu_version = "20.04"
    strelka2_version = "2.9.10"
    manta_version = "1.6.0"
    MuSE_version = "2.0.4"
    BCFtools_version = "1.17"
    call_ssnv_r_version = "dev"
    vcf2maf_version = "v1.6.18"
    docker_image_validate_params = "${-> params.docker_container_registry}/pipeval:${params.pipeval_version}"
    docker_image_GATK = "broadinstitute/gatk:${params.GATK_version}"
    docker_image_somaticsniper = "${-> params.docker_container_registry}/somaticsniper:${params.somaticsniper_version}"
    docker_image_bam_readcount = "${-> params.docker_container_registry}/bam-readcount:${params.bam_readcount_version}"
    docker_image_ubuntu = "ubuntu:${params.ubuntu_version}"
    docker_image_strelka2 = "${-> params.docker_container_registry}/strelka2:${params.strelka2_version}"
    docker_image_manta = "${-> params.docker_container_registry}/manta:${params.manta_version}"
    docker_image_MuSE = "${-> params.docker_container_registry}/muse:${params.MuSE_version}"
    docker_image_BCFtools = "${-> params.docker_container_registry}/bcftools:${params.BCFtools_version}"
    docker_image_r_VennDiagram = "${-> params.docker_container_registry}/call-ssnv-r:${params.call_ssnv_r_version}"
    docker_image_vcf2maf = "ghcr.io/mskcc/vcf2maf/vcf2maf:${params.vcf2maf_version}"
}

docker {
    enabled = true
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"
    runOptions = "${uid_and_gid} ${all_group_ids}"
}

process {
    executor = 'local'
}
